package interfaces;

import java.awt.image.*;
import java.awt.event.*;
import javax.swing.*;
import fitness.*;

import java.io.*;
import java.text.*;
import multiobjective.*;

import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.*;
import javax.swing.tree.DefaultMutableTreeNode;
import ec.gp.*;


/**
 * This display class is used in Chromosome viewing, displaying the image and
 * allowing a series of operations to be carried out upon the chromosome string.
 *
 * @author Steve Bergen - Brock University
 * @version 1.0.0 - 25/04/2009
 */

public class ChromosomeWindow extends javax.swing.JFrame implements ActionListener  {

    
    private Frame           main;                   // Calling frame

    private MOData          ind;                    // GP Tree
    private BufferedImage   image;                  // Chromosome image

    private DecimalFormat   df;
    private JFileChooser    fc;                     // File Chooser window

    public  DefaultComboBoxModel    model, model2;

    private int                     fitnessX    = 0;
    private int                     fitnessY    = 0;
    private int                     typeIndex   = 0;


    
    /**
     * Class constructor. Creates and opens the editor, initializing all 
     * settings and controls.
     *
     * @param main          Calling frame interface
     * @param globals       Global variable object
     * @param index         This chromosome's index
    */
    
    public ChromosomeWindow ( Frame main, MOData ind ) {

        this.main       = main;
        this.ind        = ind;

        editImage();

        initComponents();

        this.addWindowListener(new listeners.FrameListener(main, this));

        df = new DecimalFormat("#.######");

        model = new javax.swing.DefaultComboBoxModel(new String[] {});
        model.removeAllElements();
        model2 = new javax.swing.DefaultComboBoxModel(new String[] {});
        model2.removeAllElements();

        for ( int i = 0; i < param.Parameters.FITNESS_FUNCTIONS.size(); i++ ) {
            model.addElement(((FitnessFunction)param.Parameters.FITNESS_FUNCTIONS.get(i)).getName());
            model2.addElement(((FitnessFunction)param.Parameters.FITNESS_FUNCTIONS.get(i)).getName());
        }

        fitnessBoxX.setModel(model);
        fitnessBoxX.setSelectedIndex(0);
        fitnessBoxY.setModel(model2);
        fitnessBoxY.setSelectedIndex(0);

        load();         // Load chromosome string values into controls

        saveButton.addActionListener(this);
        
        fc = new JFileChooser();
        
    };


    private void editImage ( ) {

        int newHeight   = 362;
        int oldHeight   = param.Parameters.IMAGEH;

        float scale     = (float)newHeight / (float)oldHeight;

        image = ind.getScaledImage(scale);

    };

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        fitnesses = new javax.swing.JTextArea();
        chart = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        fitnessBoxX = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        fitnessBoxY = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        typeBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        img = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        format = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        scale = new javax.swing.JTextField();
        width = new javax.swing.JLabel();
        height = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        treeText = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        quitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GP Tree Viewer");
        setBackground(new java.awt.Color(249, 249, 249));
        setResizable(false);

        jPanel5.setBackground(new java.awt.Color(249, 249, 249));

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        jScrollPane1.setBorder(null);

        fitnesses.setBackground(new java.awt.Color(221, 224, 223));
        fitnesses.setColumns(20);
        fitnesses.setEditable(false);
        fitnesses.setFont(new java.awt.Font("Tahoma", 0, 10));
        fitnesses.setLineWrap(true);
        fitnesses.setRows(5);
        fitnesses.setBorder(null);
        jScrollPane1.setViewportView(fitnesses);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel1.setText("Fitness Function (X):");

        fitnessBoxX.setFont(new java.awt.Font("Tahoma", 0, 10));
        fitnessBoxX.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rank" }));
        fitnessBoxX.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fitnessBoxXItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel2.setText("Fitness Function (Y):");

        fitnessBoxY.setFont(new java.awt.Font("Tahoma", 0, 10));
        fitnessBoxY.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rank" }));
        fitnessBoxY.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fitnessBoxYItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10));
        jLabel3.setText("Fitness Type :");

        typeBox.setFont(new java.awt.Font("Tahoma", 0, 10));
        typeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Raw Fitness", "Error Fitness" }));
        typeBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chart, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fitnessBoxX, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(fitnessBoxY, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(typeBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap())
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {fitnessBoxX, fitnessBoxY, jLabel1, jLabel2});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fitnessBoxX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fitnessBoxY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chart, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );

        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, image.getWidth(), Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, image.getHeight(), Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));

        saveButton.setBackground(new java.awt.Color(255, 255, 255));
        saveButton.setFont(new java.awt.Font("Tahoma", 0, 10));
        saveButton.setText("save image");

        format.setFont(new java.awt.Font("Tahoma", 0, 10));
        format.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BMP", "PNG", "JPG", "SVG" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10));
        jLabel4.setText("scale :");

        scale.setFont(new java.awt.Font("Tahoma", 0, 10));
        scale.setText("1.0");
        scale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scaleActionPerformed(evt);
            }
        });
        scale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                scaleKeyTyped(evt);
            }
        });

        width.setFont(new java.awt.Font("Tahoma", 0, 10));
        width.setText("width :");

        height.setFont(new java.awt.Font("Tahoma", 0, 10));
        height.setText("height :");

        jScrollPane2.setBorder(null);

        tree.setBackground(java.awt.SystemColor.control);
        tree.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jScrollPane2.setViewportView(tree);

        treeText.setColumns(20);
        treeText.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        treeText.setRows(5);
        jScrollPane3.setViewportView(treeText);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(width)
                        .addComponent(format, 0, 106, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addComponent(height)
                        .addComponent(scale, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {format, height, jLabel4, saveButton, scale, width});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(format, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, 0, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(width)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(height))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        quitButton.setBackground(new java.awt.Color(255, 255, 255));
        quitButton.setFont(new java.awt.Font("Tahoma", 0, 10));
        quitButton.setText("Close");
        quitButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(405, Short.MAX_VALUE)
                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quitButton)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
/**
 * Reloads the current chromosome in the chromosome display. This method is
 * called when the close button is pressed.
 *
 * @param evt           Mouse click event
*/
    
private void fitnessBoxXItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fitnessBoxXItemStateChanged

    fitnessX = fitnessBoxX.getSelectedIndex();
    loadGraph();

}//GEN-LAST:event_fitnessBoxXItemStateChanged

private void fitnessBoxYItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fitnessBoxYItemStateChanged

    fitnessY = fitnessBoxY.getSelectedIndex();
    loadGraph();

}//GEN-LAST:event_fitnessBoxYItemStateChanged

private void typeBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeBoxItemStateChanged

    typeIndex = typeBox.getSelectedIndex();
    loadGraph();

}//GEN-LAST:event_typeBoxItemStateChanged

private void scaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scaleActionPerformed

    double d = getDouble(scale);

    if ( d >= 1 ) {

        int newW = (int)((float)param.Parameters.IMAGEW * d);
        int newH = (int)((float)param.Parameters.IMAGEH * d);

        width.setText("width : " + newW);
        height.setText("height : " + newH);

    } else {

        width.setText("width : " + 1.0);
        height.setText("height : " + 1.0);

    }


}//GEN-LAST:event_scaleActionPerformed

private void scaleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_scaleKeyTyped

    double d = getDouble(scale);

    if ( d >= 1 ) {

        int newW = (int)((float)param.Parameters.IMAGEW * d);
        int newH = (int)((float)param.Parameters.IMAGEH * d);

        width.setText("width : " + newW);
        height.setText("height : " + newH);

    } else {

        width.setText("width : " + 1.0);
        height.setText("height : " + 1.0);

    }
    
}//GEN-LAST:event_scaleKeyTyped

private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed

    this.main.setEnabled(true);
    this.setVisible(false);

}//GEN-LAST:event_quitButtonActionPerformed


/**
 * Sets the chromosome image to an icon in this window for display.
*/

public void load ( ) {
    
    this.img.setIcon(new ImageIcon(image));

    fitnesses.setBorder(null);
    fitnesses.setBackground(jPanel7.getBackground());
    
    fitnesses.append("Fitness Values (Rank " + ind.fit + ")\n\n");
    fitnesses.append("Fitness Fct\tError Fitness\tRaw Fitness\t\tRank\n");
    fitnesses.append("--------------------------------------------------------" +
            "--------------\n");
    
    // Loads fitness values
    for ( int i = 0; i < param.Parameters.FITNESS_FUNCTIONS.size(); i++ ) {

        FitnessFunction f = (FitnessFunction)param.Parameters.FITNESS_FUNCTIONS.get(i);
        String s = f.getName() + " :\t" + df.format(ind.fitness[i]) + "\t" +
                df.format(ind.raw[i]) + "\t\t" + ind.ranks[i];

        fitnesses.append(s + "\n");

    }

    scaleActionPerformed(null);

    tree.setBackground(jPanel7.getBackground());
    create();

    treeText.setText(ind.getTree());
    
    loadGraph();
    
};

    private void create ( ) {

        int length = ((GPIndividual)ind.program).trees.length;

        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Trees (max depth = " + ind.depth + ") (click to expand)");

        for ( int i = 0; i < length; i++ ) 
            parse(top, ((GPIndividual)ind.program).trees[i].child, i);
            
        tree.setModel(new javax.swing.tree.DefaultTreeModel(top));

    };


    // pass parent node
    private void parse ( DefaultMutableTreeNode tnode, GPNode node, int tid ) {

        String s = node.toString();
        if ( tid > 0 ) s += " ADF" + (tid - 1) + "[" + tid + "]";

        DefaultMutableTreeNode temp = new DefaultMutableTreeNode(s);
        tnode.add(temp);

        for ( int i = 0; i < node.children.length; i++ )
            parse(temp, node.children[i], -1);

    };


 /**
     * Extracts information from the globals object and displays it as a graph.
    */

    public void loadGraph ( ) {

        MOData[] pop = ((ChromosomeDisplay)param.Parameters.FRAME.mainPanel).list;

        // Create new series
        XYSeries series1 = new XYSeries("GP Individuals");
        XYSeries series2 = new XYSeries("Current");

        // Just add another series for an individuals scores! (ADD only one)
        //XYSeries series2 = new XYSeries("Average Fitness");

        String xs = ((FitnessFunction)param.Parameters.FITNESS_FUNCTIONS.get(fitnessX)).getName();
        String ys = ((FitnessFunction)param.Parameters.FITNESS_FUNCTIONS.get(fitnessY)).getName();

        // Add generation stats for all current generations to the series
        int size = pop.length;
        for (int i = 0; i < size; i++) {

            if ( pop[i].equals(ind) ) {
                if ( typeIndex == 0 )
                    series2.add(pop[i].raw[fitnessX], pop[i].raw[fitnessY]);
                else
                    series2.add(pop[i].fitness[fitnessX], pop[i].fitness[fitnessY]);
            } else {
                if ( typeIndex == 0 )
                    series1.add(pop[i].raw[fitnessX], pop[i].raw[fitnessY]);
                else
                    series1.add(pop[i].fitness[fitnessX], pop[i].fitness[fitnessY]);
            }

        }

        // Add the series to the chart
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series1);
        dataset.addSeries(series2);

        JFreeChart chart = ChartFactory.createScatterPlot
            ("", xs, ys,
        dataset, PlotOrientation.VERTICAL, false, true, false);

        chart.setBackgroundPaint(jPanel2.getBackground());

        // Displays the chart as an icon
        BufferedImage image = chart.createBufferedImage(303,157);
        this.chart.setIcon(new ImageIcon(image));

    };


/**
 * Resets the image icon to the image of this chromosome
 *
 * @param image         BufferedImage of this chromosome
*/

public void changeIcon ( BufferedImage image ) {
    
    this.img.setIcon(new ImageIcon(image));
    
};


    /**
     * Tests that the string in a textfield can be converted to a double.
     *
     * @param txt           Textfield to parse
     * @return              Double value (if any) of that text field
     */

    private double getDouble ( javax.swing.JTextField txt ) {

        double i        = 0;
        String s        = txt.getText();

        try {

            i = Double.parseDouble(s);

        } catch ( Exception e ) {

        }

        return i;

    };

    /**
     * Function called when the 'browse' button is selected. This prompts the
     * file chooser and requests that the user selects a base image.
     * 
     * @param e     Mouse Event (unused)
    */

    public void actionPerformed ( ActionEvent e ) {

        if (e.getSource() == saveButton) {
            
            int returnVal = fc.showSaveDialog(ChromosomeWindow.this);
            
            if (returnVal == JFileChooser.APPROVE_OPTION) {

                String f = "png";
                double d = getDouble(scale);
                if ( d < 1 ) d = 1;

                int index = format.getSelectedIndex();
                if ( index == 0 ) f = "bmp";
                else if ( index == 1 ) f = "png";
                else if ( index == 2 ) f = "jpg";

                File file = fc.getSelectedFile();

                if ( index != 3 )
                    util.ImageUtil.saveImage(ind.getScaledImage((float)d), file.getAbsolutePath(), f);
                else
                    util.ImageUtil.saveSVG(ind, (float)d, file.getAbsolutePath());

            }

        }

    };


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel chart;
    public javax.swing.JComboBox fitnessBoxX;
    public javax.swing.JComboBox fitnessBoxY;
    public javax.swing.JTextArea fitnesses;
    public javax.swing.JComboBox format;
    public javax.swing.JLabel height;
    public javax.swing.JLabel img;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JButton quitButton;
    public javax.swing.JButton saveButton;
    public javax.swing.JTextField scale;
    public javax.swing.JTree tree;
    public javax.swing.JTextArea treeText;
    public javax.swing.JComboBox typeBox;
    public javax.swing.JLabel width;
    // End of variables declaration//GEN-END:variables

};